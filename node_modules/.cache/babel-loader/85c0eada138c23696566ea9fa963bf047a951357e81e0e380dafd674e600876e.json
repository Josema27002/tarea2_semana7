{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"TodoList\",\n  data() {\n    return {\n      task: \"\",\n      tasks: JSON.parse(localStorage.getItem('tasks')) || []\n    };\n  },\n  methods: {\n    onAddTask() {\n      this.tasks.push(this.task);\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\n      this.task = \"\";\n    },\n    onCompleteTask(index) {\n      console.log(index);\n      this.tasks.splice(index, 1);\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\n    }\n  }\n};","map":{"version":3,"names":["name","data","task","tasks","JSON","parse","localStorage","getItem","methods","onAddTask","push","setItem","stringify","onCompleteTask","index","console","log","splice"],"sources":["src/views/TodoList.vue"],"sourcesContent":["<template>\n  <div class=\"todo-app\">\n    <h1>TODO LIST</h1>\n    <form @submit.prevent=\"onAddTask\" class=\"add-task-form\">\n      <label for=\"task\">New Task:</label>\n      <div class=\"input-container\">\n        <el-input v-model=\"task\" type=\"text\" id=\"task\" placeholder=\"Enter a new task\" />\n        <el-button type=\"primary\" @click=\"onAddTask\">Add Task</el-button>\n      </div>\n    </form>\n\n    <el-row :gutter=\"12\" class=\"task-list\">\n      <el-col :span=\"12\" v-for=\"(task, index) in tasks\" :key=\"index\">\n        <el-card class=\"task-card\" shadow=\"hover\">\n          <el-row :gutter=\"12\">\n            <el-col :span=\"18\">\n              {{ task }}\n            </el-col>\n            <el-col :span=\"4\" >\n              <el-button\n                icon=\"el-icon-check\"\n                circle\n                type=\"success\"\n                @click=\"onCompleteTask(index)\"\n              ></el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nexport default {\n\tname: \"TodoList\",\n\tdata() {\n\t\treturn {\n\t\t\ttask: \"\",\n\t\t\ttasks: JSON.parse(localStorage.getItem('tasks')) || [],\n\t\t};\n\t},\n\tmethods: {\n\t\tonAddTask() {\n\t\t\tthis.tasks.push(this.task);\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\n\t\t\tthis.task = \"\";\n\t\t},\n\t\tonCompleteTask(index) {\n\t\t\tconsole.log(index);\n\t\t\tthis.tasks.splice(index, 1);\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\n\t\t},\n\t},\n};\n</script>\n\n<style scoped>\n.todo-app {\n  max-width: 600px;\n  margin: auto;\n}\n\n.add-task-form {\n  margin-bottom: 20px;\n}\n\n.task-card {\n  margin: 5px 0;\n}\n\n.task-list {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.input-container {\n  display: flex;\n  margin-top: 8px;\n}\n\n.input-container .el-button {\n  margin: 0 4px 0 4px;\n}\n</style>\n"],"mappings":";AAkCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,KAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA;EACA;EACAC,OAAA;IACAC,UAAA;MACA,KAAAN,KAAA,CAAAO,IAAA,MAAAR,IAAA;MACAI,YAAA,CAAAK,OAAA,UAAAP,IAAA,CAAAQ,SAAA,MAAAT,KAAA;MACA,KAAAD,IAAA;IACA;IACAW,eAAAC,KAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA,KAAAX,KAAA,CAAAc,MAAA,CAAAH,KAAA;MACAR,YAAA,CAAAK,OAAA,UAAAP,IAAA,CAAAQ,SAAA,MAAAT,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}